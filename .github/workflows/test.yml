name: BBS Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    services:
      redis:
        image: redis:6
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Create uploads directory
      run: mkdir -p uploads
      
    - name: Run linting
      run: npm run lint
      continue-on-error: true
      
    - name: Run type checking
      run: npm run typecheck
      continue-on-error: true
      
    - name: Run unit tests
      run: npm run test:unit
      env:
        NODE_ENV: test
        JWT_SECRET: test-jwt-secret-for-ci
        
    - name: Run integration tests
      run: npm run test:integration
      env:
        NODE_ENV: test
        JWT_SECRET: test-jwt-secret-for-ci
        STRIPE_SECRET_KEY: sk_test_fake_key_for_testing
        OPENAI_API_KEY: sk-test-fake-openai-key-for-testing
        
    - name: Run coverage analysis
      run: npm run test:coverage
      env:
        NODE_ENV: test
        JWT_SECRET: test-jwt-secret-for-ci
        
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        
    - name: Check coverage thresholds
      run: |
        COVERAGE=$(cat coverage/coverage-summary.json | jq '.total.lines.pct')
        echo "Current coverage: $COVERAGE%"
        if (( $(echo "$COVERAGE < 90" | bc -l) )); then
          echo "Coverage $COVERAGE% is below 90% threshold"
          exit 1
        fi
        
    - name: Run security audit
      run: npm audit --audit-level moderate
      continue-on-error: true

  e2e-tests:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Create uploads directory
      run: mkdir -p uploads
      
    - name: Run E2E tests
      run: npm run test:e2e
      env:
        NODE_ENV: test
        JWT_SECRET: test-jwt-secret-for-ci
        
    - name: Upload E2E test artifacts
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: e2e-artifacts
        path: |
          screenshots/
          logs/
          coverage/

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: [test, e2e-tests]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      
    - name: Run production smoke tests
      run: |
        npm start &
        SERVER_PID=$!
        sleep 10
        curl -f http://localhost:3000/api/stats || exit 1
        kill $SERVER_PID
      env:
        NODE_ENV: production
        
    - name: Deploy to staging
      if: success()
      run: echo "Deploying to staging environment"
      # Add actual deployment steps here